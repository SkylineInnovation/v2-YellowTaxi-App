rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Ride requests - users can read/write their own requests
    match /ride-requests/{requestId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == resource.data.driverId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.customerId;
    }
    
    // Orders - users can read/write their own orders
    match /orders/{orderId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.customer.id || 
         request.auth.uid == resource.data.driver.id);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.customer.id;
    }
    
    // Drivers collection - for driver profiles
    match /drivers/{driverId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == driverId;
    }
    
    // Driver ride requests - for driver-specific ride requests
    match /driver_ride_requests/{requestId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.driverId || 
         request.auth.uid == resource.data.customerId);
      allow create: if request.auth != null;
    }
    
    // Location updates - for real-time tracking
    match /location_updates/{updateId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Notifications - users can read their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
    }
    
    // Allow reading driver locations for matching (with restrictions)
    match /driver_locations/{driverId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == driverId;
    }
  }
}
